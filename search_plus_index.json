{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction Hopper's Roppers is a website dedicated to providing the best training possible for students who are new to the field. One of the ways that we do this is through a series of free courses. This is the text based version of our Introduction to Capture the Flags Course. We believe competition is the best way to build motivation and skills in our students, so we built a course to teach CTF basics, how to use essential tools, and common problem types to prepare our students to compete by themselves. Our goal is to teach the fundamentals so that when faced with challenges, in competition or the real world, our students understand the problem, know the resources they have available, and are able to solve it themselves. This site is generated from a course hosted at: https://www.roppers.org/courses/ctf All the material is available here, but in order to get the full benefits of our course we recommend registering so that we can track your progress, grade your submissions, and provide feedback and support when you need it. If you have any questions, hit us on Twitter @roppersacademy. If you have recommended changes or feedback, this is all available on GitHub for anyone to submit issues or pull requests. Thanks for the help! Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"CourseOverview/0-CapturetheFlagCourse.html":{"url":"CourseOverview/0-CapturetheFlagCourse.html","title":"Capture the Flag Course","keywords":"","body":"Capture the Flag Course Register for the Free Course Today! Hey! I'm Dennis, the person behind Hopper's Roppers. This is the Roppers Academy Capture the Flag course. It is the second course in the roadmap I use to guide students towards the best resources available, instead of overloading them with options and a list of websites. I strongly believe that the best way to learn is by doing, and nothing gets you doing faster than participating in Capture the Flag competitions. Your ability will be stretched, your motivation will be tested, and most importantly, you will be forced to learn new things in short periods of time. The single best predictor of success in just about anything is an individual's ability to look at a problem and determine how to solve it by themselves using the knowledge and resources available to them. CTFs teach that skill in a way nothing else can. This course will teach you everything you need to jump into a beginner CTF and crush File Forensics, Cryptography, scripting problems and more. I will point you towards the best references and the best resources to learn by yourself going forward, along with always being available to answer your questions and help out in events. Certificate Students who complete this course will receive a badge indicating that they can handle themselves in a CTF and can handle most types of challenges. Example Badge Pre-Requisites This course is absurdly fast paced and immediately will take anyone out of their comfort zone. The only knowledge required for success in this course is a decent understanding of Linux. Some knowledge of scripting is useful, but if you don't know how to yet you'll just waste some time until you get around to learning it. If you still need to learn the fundamentals, check out our awesome Introduction to Computing Fundamentals. If you are looking for a course with a focus on cyber security, check out our Introduction to Security Fundamentals. If you are ready for the fun stuff, keep on with this course. This course is the deep end and it is guaranteed that a student graduating from a 4 year computer science or cyber security degree will have no idea what is going on with most of these questions. I can also guarantee that someone who is brand new to the field and has finished the Computing Fundamentals course will be able to figure out what they need to do. This is very much intentional. You are about to learn more in this class than you previously have in entire years. Trust the process, stick around, and get ready to redefine what you are capable of. Welcome to the show! Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"CourseOverview/1-TheSite.html":{"url":"CourseOverview/1-TheSite.html","title":"The Site","keywords":"","body":"The Site Hopper's Roppers This site was originally created to help train new members of my CTF team. Once I got the curriculum to where I wanted it to be I shared it with the world. My goal is for this site to become the best place on the internet for a beginner to take their first steps into the field. I already think that it is, but my goal is for this to become the place that everyone is confident recommending as their go-to. The site is named after Grace Hopper because she is my favorite person in computing history. You might have heard of her before, but if not, click here to learn about a pretty awesome person. Recommended Improving You I spent some time building a non-technical self-improvement section geared for tech folk at the beginning of our flagship course. I recommend you check out, probably most of it will be review but it can't hurt. Click Here to View Slack Join our channel at https://join.slack.com/t/hoppersroppers/shared_invite/zt-d66799ci-tZStzuZ5Nb0Coz5O6huKTA! We are a very welcoming and friendly community with about 1500 members. If you want to, post a message in the channel #helloworld with a brief introduction to let the Roppers family know you joined. We use Slack for just about everything from helping on problems, submitting feedback, or just talking about random things. For any questions about the material in this course, use the channel #course_ctf If you have feedback about typos, incorrect info, or other parts of the experience, use #feedback If you have any technical problems, use #techsupport Optional Twitter Follow @HoppersRoppers on twitter so we can follow you. Facebook We have just started a Facebook Group for Roppers at https://www.facebook.com/groups/hoppersroppers. Check us out and join our group there! LinkedIn We recently made a LinkedIn page! Follow us here and share with your connections! https://www.linkedin.com/company/hoppersroppers/ Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"CourseOverview/2-Legal.html":{"url":"CourseOverview/2-Legal.html","title":"Legal","keywords":"","body":"Legal Sorry, time for some boring legal things! Community Guidelines Our community guidelines are available here: https://www.hoppersroppers.org/guidelines.html. I'll enforce them even if you didn't read them, so please read them over. Long story short, if you do anything that makes the community feel unsafe to any member, you will be banned. If you mention anything illegal, you will be banned. If you are an asshole, I'll call you an asshole, and then I'll ban you. Privacy Policy Our privacy policy is available here: https://www.hoppersroppers.org/privacy.html. Terms of Service Our terms of service are available here: https://www.hoppersroppers.org/tos.html. Legal Unsurprisingly, in this course you will learn some things that could be used to do bad things. You might not think they're bad things at the time, and they might seem like funny pranks, but the laws against hacking are very vague. As mentioned up in the community guidelines, if you even remotely talk about conducting illegal activities in a hypothetical manner, I will ban you on the spot. Makes my life easier when I don't have to worry about nuance. Classification Absolutely nothing on this site is classified, in any way, whatsoever. Nothing is derived from classified information. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"CapturetheFlags/0-JeopardyStyle.html":{"url":"CapturetheFlags/0-JeopardyStyle.html","title":"Jeopardy Style","keywords":"","body":"Jeopardy Style Register for the Free Course Today! Read this https://ctfd.io/whats-a-ctf/ and watch the video to learn more. It's from the people behind CTFd, some cool folks from NYU that wrote the software that most Jeopardy style competitions run off. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"CapturetheFlags/1-WhatYouWillLearn.html":{"url":"CapturetheFlags/1-WhatYouWillLearn.html","title":"What You Will Learn","keywords":"","body":"What You Will Learn There are a wide variety of skills required to succeed in a CTF competition. This course will attempt to teach you everything you need to know to start and take on any competition. First, we will start with how to use linux and linux command line tools. Then after a brief introduction to python scripting, we will launch into CTF specific topics. Forensics is comprised of host-based and network forensics and we will go into the basics of that. Cryptography will be brief and will go over basic problems and how to solve them. We will also go into the basics of web exploitation and how some of those challenges work. This is a beginner course, so we will not be getting into Reverse Engineering or Binary Exploitation at all. This is meant to prepare you for the picoCTF competition where you will have to figure out how to use the skills and resources you learned in this course to solve problems as you go. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"CTFMeta/0-BasicPrinciples.html":{"url":"CTFMeta/0-BasicPrinciples.html","title":"Basic Principles","keywords":"","body":"Basic Principles Register for the Free Course Today! Flag Format Most of the time the flag format will be an ASCII string that you discover during the course of the problem. In the most common scenario it will look something like \"The Flag is: this_is_the_flag\", \"ctfName{this_is_the_flag}\"\" or just \"this_is_the_flag\". Sometimes the organizers will use leetspeak so it will look like \"ctfName{th15_15_th3_fl4g}\"\". Of course not all flags can follow these formats, so always be looking for anything out of place, especially during forensics challenges. Most problems will specify the flag format, but if they do not, you must be on the lookout for any ambiguity. Always check for: Capitalization Character encoding Trailing whitespace/newlines Date/Time formats Hex address formats (0x0042 vs 0042 vs 00000042) Sometimes the flag will require you to submit a hash of a variety of information that you have found. Be especially careful with these problems to verify what you are putting into your hashing algorithm, and that you are using the right algo. Very rarely is a flag able to be brute forced. As a result, even if the potential number of solutions is small, expect that there is a twist or mis-spelling that will require you to solve the problem. Most CTFs will specifically have a rule against brute forcing in their rules because of the potential impact on the event infrastructure, so just solve the problem, don't bruteforce. Mechanics Some common mechanics for Jeopardy-style CTFs: Just like Jeopardy, the more difficult problems are worth more points, and the easier or higher-variance trivia and guessing problems worth fewer points. This encourages people to look at the difficult problems and learn the more hardcore security skills! Therefore, any CTF scoring system--however complex--must strongly tend to reward the teams that demonstrate the best security skills. Some common mechanics for Jeopardy-style CTFs: Often solving the easier challenges will unlock harder, higher point challenges. Binary Exploitation problems wind up having some of the highest general point values because they are the most difficult skills to learn. There are usually extra \"first blood\" points (usually only a small number that allow for tie-breaking) given to the first few teams who solve a challenge. This discourages \"flag hoarding\", where a team holds on to their flags and submits them all at the very end of the competition. (This is a fairly advanced move, but flag hoarding allows a team to hide their true score on the scoreboard, causing other teams to feel that they have comfortable leads and don't need to be working to the last minutes. Then the flag hoarders can drop their stored flags and pull ahead in the last few seconds. Awesome when you do it, pretty terrible when it is done to you.). Communication Organizers are usually reachable throughout the entire CTF, either in an IRC, Slack, or by email. With that said, you should never reach out to organizers for hints during the competition. However, if a challenge appears to be failing or a webserver is not responding, you should let them know so that they can take action behind the scenes to make sure everything is operating as designed. Organizers also usually have an official, non-real time channel like a Twitter or a news page on the site to ensure that nobody misses any important game updates. Sometimes hints are dropped their too. Whenever a change is made to a problem, usually it is announced in whatever the non-real time channel is, in addition to in the real time chat. When this happens, make sure to check the problem description for a change, and if a file has been updated, your first move should be diffing the two files to find what was \"fixed\". Most of the time that will help you find your answer. References: http://captf.com/maxims.html https://github.com/pwning/docs/blob/master/suggestions-for-running-a-ctf.markdown Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"CTFMeta/1-LinuxandVMs.html":{"url":"CTFMeta/1-LinuxandVMs.html","title":"Linux and VMs","keywords":"","body":"Linux and VMs You should have validated this prior to registering for the course. There is a huge range of experience someone can have with Linux and VMs, so I don't make any attempt at pre-scribing what skills you should have. If you are not sure if you should validate this, in my opinion the best way to see if you are ready is to play the Bandit CTF challenges up to level 14. http://overthewire.org/wargames/bandit/ If you can roll through those without too much trouble, you should be fine. If not, I recommend you check out the https://linuxjourney.com/ resources and go through all of the Grasshopper and Journeyman material prior to trying to work your way through Bandit again. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"CTFMeta/2-ProgrammingandScripting.html":{"url":"CTFMeta/2-ProgrammingandScripting.html","title":"Programming and Scripting ","keywords":"","body":"Programming and Scripting We are assuming you have some Python experience. Much like the previous section, \"experience\" is a fairly amorphous concept. To determine if you have enough Python experience, ask yourself if you are able to write a basic web-scraper, download the results into a CSV, and then run logic on those values. If you think that sounds easy, move on ahead. If you think that sounds a little beyond your current ability, check out https://automatetheboringstuff.com/. We are working on having a quick course to go over this, but it is still in progress. If you don't know Python (or another scripting language well), check out https://www.codecademy.com/learn/learn-python. It is Python 2 (which is no longer actively maintained in favor of Python 3), but it is a wonderful course and will teach you everything you need to know about Python. The only difference you're going to come across for a while is that print statements can look slightly different. You'll be fine, trust me. Let me know if you have any questions. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/0-CTFMeta.html":{"url":"FileForensics/0-CTFMeta.html","title":"CTF Meta","keywords":"","body":"CTF Meta Register for the Free Course Today! Host forensics is the most hated of all CTF problem types. This is not because the problems are particularly hard or boring, but is because some people who make the problems are lazy and make it into a dumb guessing game. Personally, forensics problems are my favorite category. It's the one that has the most applicability to real world jobs, is super easy to get started, and when the problems are done correctly, it is basically like solving a mystery. There are a few categories of forensic problems that we will go over in this course, focusing on the ones that we see in CTF problems the most frequently. None of this should be confused with what actual forensic analysts do in an incident response, however, many of the skills overlap and there are some fundamental theories that can be applied to CTF problems. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/1-RepresentingData.html":{"url":"FileForensics/1-RepresentingData.html","title":"Representing Data","keywords":"","body":"Representing Data Binary Beep bop boop I am a computer! Learn how the 1s and 0s work here! https://learn.sparkfun.com/tutorials/binary Hexadecimal Alright, so now you've gotten a taste of binary, let's talk about non-binary representation. 1s and 0s really are hard to read, so luckily we have something a bit more 68756d616e207265616461626c65... sorry, human readable. Hexadecimal, base 16, hex, whatever you want to call it, will become a language that you see constantly during your technical journey. Being comfortable working with hex is one of the skills that will help you stand out. From the same site as the binary tutorial (gee, sure hope you liked it) we have an introduction to hexadecimal. https://learn.sparkfun.com/tutorials/hexadecimal Now, back to the terminal. $ echo \"Hello!\" > file4 $ xxd file4 xxd is able to convert a file into its hexadecimal representation. If you do not have it installed, install it with apt-get. Download this image using wget or curl: https://raw.githubusercontent.com/hoppersroppers/hoppersroppers.github.io/main/_layouts/compass.png Open the file with xxd and check out what is in it. Shouldn't make much sense, but it should at least look cool. File formats (and networking protocols, and all sorts of other things on the internet) are defined in documents known as RFCs. All files follow the rules for their file format. Read through the .png format RFC and find where the file signature, aka the \"magic number\" is defined. https://tools.ietf.org/html/rfc2083 Nobody has this content memorized, but when they deep dive into a format or protocol, the RFC has the answers. You'll spend plenty of time looking through RFCs, but not right now. It makes your brain hurt. Any time you need to deal with a file format, google/wikipedia will provide most of the answers. If you need to dig deeper than that, go to the RFC. Hex-editing xxd is not really a hex-editor, it just displays hex. However, we can use it to convert files into hex, make edits to them with our favorite text editors, then convert the files back into the correct formats. First, let's make a copy of the .png you downloaded using cp and name it \"copyOfPng.png\" We can then use xxd to convert the file into a hexdump. $ xxd copyOfPng.png > hexDumped Now if we open hexDumped with our text editor of choice we can see that it is in a new format. Make an edit to the file and change the first four characters (the magic numbers) to be 0000. Save your changes and go back to the terminal. Now we will use xxd to rebuild the file from hex. $ xxd -r hexDumped > modified.png Try to open modified.png. It shouldn't be opening now because we mangled (that's a technical term for corrupted) the file header! diff One useful tool to find the difference between files is to use diff. diff takes two pieces of text and compares them, looking for differences. With text files usage is as simple as $ diff file1.txt file2.txt and the results will display. It is slightly more complicated with binary files or other dense formats like images. To see what the difference between the original image and the new mangled file we were playing with before: $ diff -y Little bit of fancy footwork going on with redirectors here!!!! We are converting the images to hex with xxd, then redirecting them, then using them as arguments for the diff command. This will display the differences between the two files. diff is great, you will use it all the time. There are GUI versions of diff, but I also really like using online ones in browsers. Saves some time when you need it, and usually very good. I recommend https://www.diffchecker.com/. To fix this mangled file header, we will use a hex-editor. Hex-editors do a similar thing to xxd, but also give us the ability to edit in a nice GUI. The one we will use is bless. It is not particularly fancy but it gets the job done. To install: $ sudo apt-get install bless To open up the mangled file, run $ bless modified.png. Now, using the RFC, correct the mangled bits on the front so that you are able to open the image again. If you want to, use xxd and vim to fix the file. Bless gives prettier options, but a lot of the time, Vim is what you will have and you'll want to be comfortable. Base64 Base64 is another encoding scheme that uses, you guessed it, 64 characters to represent data in an ASCII text format. Base64 is commonly used to encode binaries that would not be able to be sent via methods that only use ASCII, such as in HTML, in URLs, or in some email formats. Base64 is visually distinctive because of its use of \"=\" at the end of a string of letters and numbers. Most of the time when you see that form, it will be Base64, simply based off of how common Base64 is. Don't worry too much about why there is an \"=\" sign, it is for padding to make translation easier. To manipulate Base64 in the terminal, we use the command base64. $ echo \"Hello World\" | base64 $ echo \"Hello World\" > 64dText $ base64 --decode 64dText $ base64 --decode SGVsbG8gV29ybGQ= It isn't often that you have to do this from the command line, but it happens occasionally. For this assignment, I am going to have you convert between encodings by hand. This is meant to ensure you understand what is going on. Don't cheat, and don't move on until you get it, this is very important you understand. Assignment: How many bits are used for each character in ASCII? \"01101000 01100101 01101100 01101100 01101111 00100001\" is in binary. Convert it back to ASCII. Do it by hand using the chart. Alright. Now. Convert 17 in Ascii to Binary and Hex. Do it by hand. Convert \"Go Navy\" to Octal, Hex, and Binary. Yes. By hand. Use Google to figure out how. This is supposed to not be fun. What does \"c2l4dHlmb3Vy\" translate to from Base64? It is annoying to do that by hand, but it does help in the long run. ... but here is a tool so that you never have to do that again as my apology for making you do it. https://gchq.github.io/CyberChef/. Fun fact, it is released by GCHQ, Britain's version of the NSA. Great tool and very useful for converting encodings/encryption, but there is so much more. There are about a thousand uses for this thing and many security professionals use it all the time. I love it for CTFs. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/2-PolyglotFiles.html":{"url":"FileForensics/2-PolyglotFiles.html","title":"Polyglot Files","keywords":"","body":"Polyglot Files We learned about magic numbers in the last assignment, now let's learn about some funk things we can do because of this. The essence of hacking is that there is a system, we understand the system, and then we do something awesome with it. Here we are going to make a polyglot file that can be opened as a .gif or as a .jar by taking advantage of how the OS tries to open files. Use this link to help create the jar file https://github.com/macagua/example.java.helloworld. Then make your own hello world gifar using the information in this Stackoverflow answer. https://security.stackexchange.com/questions/116819/beside-gifar-are-there-any-other-known-polyglot-files. While you are learning about polyglot files, you should learn about POC || GTFO. https://hackaday.com/2017/08/14/bibles-you-should-read-poc-gtfo/. They are very entertaining, though highly advanced. Download https://github.com/rrbranco/poc_gtfo/blob/master/pocorgtfo07.pdf and go read Chapter 6. It will open your mind to what is possible, and like all good pieces of education, will mostly serve to teach you how little you know. For your assignment, write up why the .gifar works. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/3-JPGAdventuresIP.html":{"url":"FileForensics/3-JPGAdventuresIP.html","title":"JPG Adventures IP","keywords":"","body":"JPG Adventures IP Why do we care about file formats? Why do specifications matter? Follow this writeup. https://github.com/blinils/CTF/blob/master/CTF-Jeopardy/2016-icectf/challenges/corrupt-transmission-50/README.md Submit a screenshot of your solution. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/5-FileCarving1.html":{"url":"FileForensics/5-FileCarving1.html","title":"File Carving 1","keywords":"","body":"File Carving 1 [Register for the Free Course Today!](https://www.roppers.org/courses/ctf Follow this walkthrough: https://github.com/HackThisSite/CTF-Writeups/tree/master/2017/EasyCTF/Zooooooom Submit a sentence or two on what you had to do to solve this challenge and anything you struggled with understanding. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/6-FileCarving2.html":{"url":"FileForensics/6-FileCarving2.html","title":"File Carving 2","keywords":"","body":"File Carving 2 Follow this walkthrough: https://github.com/hoppersroppers/ctfWriteups/blob/main/CSAW15/FOR300-Mandiant/readme.md Submit a sentence or two on what you had to do to solve this challenge and anything you struggled with understanding. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/7-FileCarving3.html":{"url":"FileForensics/7-FileCarving3.html","title":"File Carving 3","keywords":"","body":"File Carving 3 Follow this walkthrough: https://blog.stalkr.net/2010/05/defcon-18-ctf-quals-writeup-forensics.html Submit a sentence or two on what you had to do to solve this challenge and anything you struggled with understanding. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/8-FileCarving4.html":{"url":"FileForensics/8-FileCarving4.html","title":"File Carving 4","keywords":"","body":"File Carving 4 Follow this walkthrough: https://medium.com/@the.bilal.rizwan/intigriti-ctf-writeup-737009900a42 The image in the tweet is gone, but we can still follow the solution walkthrough. Submit a sentence explaining how QR codes work. Submit a sentence or two on what you had to do to solve this challenge and anything you struggled with understanding. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/9-FileCarving5.html":{"url":"FileForensics/9-FileCarving5.html","title":"File Carving 5","keywords":"","body":"File Carving 5 What files are contained inside of PoC || GTFO Volume 7? https://www.alchemistowl.org/pocorgtfo/pocorgtfo07.pdf Submit a sentence or two on what you had to do find these files and anything you struggled with understanding. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/11-FileMetadata.html":{"url":"FileForensics/11-FileMetadata.html","title":"File Metadata","keywords":"","body":"File Metadata What is metadata in the real world? https://ssd.eff.org/en/module/why-metadata-matters Usually we are thinking about in the context of communications, but files contain metadata as well. When it was created, where, by who... sometimes it even will tell you the type of machine. Read this: https://ctf101.org/forensics/what-is-metadata/ Give me the GPS coords for this picture: https://github.com/ianare/exif-samples/blob/master/jpg/gps/DSCN0010.jpg. I recommend this site: http://exif.regex.info/ Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/12-FileMetadata2.html":{"url":"FileForensics/12-FileMetadata2.html","title":"File Metadata 2","keywords":"","body":"File Metadata 2 Follow this walkthrough: https://github.com/ctfs/write-ups-2015/tree/master/insomni-hack-ctf-2015/forensic/zoom-in Submit a sentence or two on what you had to do to solve this challenge and anything you struggled with understanding. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/14-Steganography1.html":{"url":"FileForensics/14-Steganography1.html","title":"Steganography 1","keywords":"","body":"Steganography 1 Steganography, or stego, challenges are among the most hated of all CTF challenges because they really are only limited in difficulty by how much of a pain in the ass the people who wrote the challenge are. No matter the challenge, if you've come across a picture that doesn't have anything useful in it or in the metadata and have spent far too long trying to figure out what it means, it is worthwhile to throw it into a few stego solvers you will download below. If it works, curse the person who made the challenge and continue working. If it doesn't work, you've exhausted one avenue and it's time to keep looking for something else. Read this: https://ctf101.org/forensics/what-is-stegonagraphy/ Luckily, there are a few \"standard\" problems and tools that make solving those problems easier. Complete this writeup and submit a screenshot of the answer: https://github.com/krx/CTF-Writeups/blob/master/CSAW%2016%20Quals/for250%20-%20Watchword/jk_actual_writeup.md I recommend you use this link to download Stegsolve https://github.com/eugenekolo/sec-tools/tree/master/stego/stegsolve/stegsolve. I recommend you use this link to download Steghide https://github.com/eugenekolo/sec-tools/tree/master/stego/stegsolve/stegsolve. Steghide is the defacto tool for password protected stego challenges, but don't forget to try steghide with no password. With these two tools you should be able to solve 90% of all stego problems. Even if these don't work, they can still identify weirdness and you can investigate further. Submit a sentence or two on what you had to do to solve this challenge and anything you struggled with understanding. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/15-Steganography2.html":{"url":"FileForensics/15-Steganography2.html","title":"Steganography 2","keywords":"","body":"Steganography 2 Complete this writeup: https://github.com/ctfs/write-ups-2015/tree/master/pragyan-ctf-2015/stegano/what_you_see_is_what_you_get Submit a sentence or two on what you had to do to solve this challenge and anything you struggled with understanding. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"FileForensics/18-UserTestimonial.html":{"url":"FileForensics/18-UserTestimonial.html","title":"User Testimonial","keywords":"","body":"User Testimonial If you have gotten this far, I'd really appreciate a user testimonial. They go a long way towards getting new students and helping me out with marketing. Thanks for the help, and no pressure! https://docs.google.com/forms/d/1-gikX-u3Xxoh396NnBBrOk4A-qQx4Qqx7erBpmwnFlw Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/0-CTFMeta.html":{"url":"Cryptography/0-CTFMeta.html","title":"CTF Meta ","keywords":"","body":"CTF Meta Register for the Free Course Today! Cryptography is often considered to be one of the harder challenge types because many of the problems require deep specialization to understand. However, we are not teaching deep specialization in this course, we are teaching quick and dirty techniques to solve problems and find resources. There are a variety of common crypto problems such as: Ciphertext only Ciphertext + private key and algorithm Ciphertext and custom source code Ciphertext + public key and algorithm For the most part, you will always get enough ciphertext for meaningful statistics and for any advanced cryptography problem they will let you know what the algorithm is because the ciphertext will all be totally random. The only time you will get ciphertext only is for very short, classical algorithms. It is also unlikely that any problem is going to require extensive password cracking or bruteforcing. If you find yourself needing extreme computation, expect to have made a wrong turn somewhere. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/1-ClassicalCiphers.html":{"url":"Cryptography/1-ClassicalCiphers.html","title":"Classical Ciphers","keywords":"","body":"Classical Ciphers Classical Ciphers Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/2-FrequencyAnalysis.html":{"url":"Cryptography/2-FrequencyAnalysis.html","title":"Frequency Analysis","keywords":"","body":"Frequency Analysis Read this: https://www.dcode.fr/frequency-analysis Use the tool to determine the frequency of characters, bigrams, and trigrams of the text: \"Frequency analysis is the study of the distribution of the letters in a text. Analysis of frequencies help decrypting substitution-based ciphers using the fact that some letters apparitions are varying in a given language : in english, letters E, T or A are common while Z or Q are rare.\" Then use the tool to determine frequency of chars, bigrams, and trigrams of this text: \"Iuhtxhqfb dqdobvlv lv wkh vwxgb ri wkh glvwulexwlrq ri wkh ohwwhuv lq d whaw. Dqdobvlv ri iuhtxhqflhv khos ghfubswlqj vxevwlwxwlrq-edvhg flskhuv xvlqj wkh idfw wkdw vrph ohwwhuv dssdulwlrqv duh ydublqj lq d jlyhq odqjxdjh : lq hqjolvk, ohwwhuv H, W ru D duh frpprq zkloh C ru T duh uduh.\" Explain how frequency analysis can be used to identify the type of cipher used. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/3-AutomatedFrequencyAnalysis.html":{"url":"Cryptography/3-AutomatedFrequencyAnalysis.html","title":"Automated Frequency Analysis","keywords":"","body":"Automated Frequency Analysis Read the explanation at the bottom of this: https://www.dcode.fr/monoalphabetic-substitution Then decrypt this: \"Iuhtxhqfb dqdobvlv lv wkh vwxgb ri wkh glvwulexwlrq ri wkh ohwwhuv lq d whaw. Dqdobvlv ri iuhtxhqflhv khos ghfubswlqj vxevwlwxwlrq-edvhg flskhuv xvlqj wkh idfw wkdw vrph ohwwhuv dssdulwlrqv duh ydublqj lq d jlyhq odqjxdjh : lq hqjolvk, ohwwhuv H, W ru D duh frpprq zkloh C ru T duh uduh.\" Most automated cryptography tools use this sort of technique behind the scenes. Crypto has a lot of math, but luckily, because it is math, someone else has usually written a tool to do it for you. It takes a lot of work to get to the cutting edge in this field. What is text fitness? Explain how frequency analysis can be used to automatically detect the correct decryption of a ciphertext. What is leet speak? How would this break a text fitness calculation? Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/4-IndexofCoincidence.html":{"url":"Cryptography/4-IndexofCoincidence.html","title":"Index of Coincidence","keywords":"","body":"Index of Coincidence Read this: https://www.dcode.fr/index-coincidence \"Iuhtxhqfb dqdobvlv lv wkh vwxgb ri wkh glvwulexwlrq ri wkh ohwwhuv lq d whaw. Dqdobvlv ri iuhtxhqflhv khos ghfubswlqj vxevwlwxwlrq-edvhg flskhuv xvlqj wkh idfw wkdw vrph ohwwhuv dssdulwlrqv duh ydublqj lq d jlyhq odqjxdjh : lq hqjolvk, ohwwhuv H, W ru D duh frpprq zkloh C ru T duh uduh.\" Explain how the index of coincidence can be used in cryptography. What is a transposition cipher? What is a monoalphabetic cipher? What is a polyalphabetic cipher? Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/5-CaesarCiphersandSubstitution.html":{"url":"Cryptography/5-CaesarCiphersandSubstitution.html","title":"Caesar Ciphers and Substitution","keywords":"","body":"Caesar Ciphers and Substitution [Register for the Free Course Today!](https://www.roppers.org/courses/ctf Caesar The most common, and most famous, of all ciphers. Read this: https://www.boxentriq.com/code-breaking/caesar-cipher Solve using https://www.dcode.fr/caesar-cipher How does a Caesar cipher work? \"wklv lv d vwdqgdug fdhvdu\" \"guvf vf n ebg 13 pynffvp\" What is a ROT13 cipher? Substitution Read this: https://www.dummies.com/games/cryptograms/cryptography-101-basic-solving-techniques-for-substitution-ciphers/ Solve using https://www.dcode.fr/monoalphabetic-substitution How does a substitution cipher work? \"JDS CGJSNAWJCKS JBBV YNBKCZSZ QP ZWBZS AVVBOU A USTC-AIJBTAJCW ZSWNPYJCBG BX TSUUAESU SGWNPYJSZ QP UIQUJCJIJCBG WCYDSNU. JDS TACG JSWDGCHIS CU JB AGAVPMS JDS XNSHISGWCSU BX VSJJSNU AGZ XCGZ JDS TBUJ VCFSVP QCENATU. JDS FGBOG YVACGJSLJ AJJAWF TAFSU CJ YBUUCQVS JB ZSZIWS UBTS VSJJSNU BX JDS AVYDAQSJ KCA JDS FGBOVSZES BN JDS YNSVCTCGANP EISUU BX WSNJACG YBNJCBGU BX JDS YVACG JSLJ.\" \"JDS TACG JSWDGCHIS CU JB AGAVPMS JDS XNSHISGWCSU BX VSJJSNU AGZ XCGZ JDS TBUJ VCFSVP QCENATU.\" Why is it harder for it to solve shorter text? Or put better, why is it easier to solve with longer text? Think frequencies. Fix the last cipher manually to get the correct answer. Solve this, with the knowledge that the word \"substitution\" is in the plaintext. \"VCZNKOV: GSV NLHG XLNNLM ZOKSZYVGH FHVW ULI HFYHGRGFGRLMH ZIV\" Don't forget to use frequency analysis. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/6-VigenereCiphers.html":{"url":"Cryptography/6-VigenereCiphers.html","title":"Vigenere Ciphers","keywords":"","body":"Vigenere Ciphers Read this: https://www.boxentriq.com/code-breaking/vigenere-cipher Solve using https://www.dcode.fr/vigenere-cipher What is a vigenere cipher? Why is it harder to solve than a Caesar cipher? Use the word \"keyspace\" in your answer. \"cs rrmq sw y cxyxhybh tskcxipo ggzlcb xfkx gc iycc ry hcmvwzx zogyewc yj yvp rri qzeaow\" \"csrrmqswycxyxhybhtskcxipoggzlcbxfkxgclybhcbfcmescimpwnkgcc \" \"24hr5gBwyv4hrefnif34gApjDfRmei2iPD7V\" This text was encrypted with an alphabet of a-z,0-9 and has the string \"1337\" in the file Why is that last ciphertext so much harder for an automated solver? Most flags in competitions for all challenges, not just crypto will be obfuscated in the same way to prevent someone from bruteforcing. \"ms5yr 32e ud0s 5rdw1yq dg2e6 gnqdvrsobb dy7upnx, u81g k2b brz!\" This file was encrypted with a dictionary word. Use the dictionary solver. Why are wordlists useful for cracking ciphers? Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/7-FunCiphers.html":{"url":"Cryptography/7-FunCiphers.html","title":"Fun Ciphers","keywords":"","body":"Fun Ciphers The good (and bad) thing about ciphers is that really anything can be used to convey information. This means you will come across all sorts of wild challenges. When you come across them, pay attention to hints and use google to try to identify what they are and where to find an online solver. If you can't find a solver you'll have to do it manually, or write your own. Especially in a competition, doing it manually is faster than writing your own. Solve these problems: https://github.com/hoppersroppers/hoppersroppers.github.io/raw/master/_layouts/semaphore.JPG \"--. --- --- --- --- --- --- --- --- / -. .- ...- -.-- -.-- -.-- -.-- -.-- -.-- -.-- / -... . . . . . .- .- .- - / .- .-. .-. -- -.-- -.-- -.-- -.-- -.-- \" https://github.com/hoppersroppers/hoppersroppers.github.io/raw/master/_layouts/flags.JPG Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/9-ModernCryptography.html":{"url":"Cryptography/9-ModernCryptography.html","title":"Modern Cryptography","keywords":"","body":"Modern Cryptography Modern Cryptography Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/10-ModernCrypto.html":{"url":"Cryptography/10-ModernCrypto.html","title":"Modern Crypto","keywords":"","body":"Modern Crypto Cryptography has come a long long way since the time of Caesar. Now, just about everything we do relies on math. Math, it turns out, is very hard to beat if it is done properly. Math can tell you that it is provably impossible for an attacker to decrypt something earlier than the heat death of the sun. That is pretty awesome. If you find yourself trying to beat math, you're probably attacking the wrong part of the problem. Learn about encryption below. You've already read this, but use it to answer the HW. https://web.archive.org/web/20170704130139/https://www.usna.edu/CyberDept/sy110/lec/cryptSymmEnc/lec.html What is symmetric encryption? Do the HW: https://web.archive.org/web/20170704130139/https://www.usna.edu/CyberDept/sy110//lec/cryptSymmEnc/hw/hw.pdf Read this: https://web.archive.org/web/20170704130139/https://www.usna.edu/CyberDept/sy110/lec/cryptAsymmEnc/lec.html What is asymmetric encryption? Do the HW: https://web.archive.org/web/20170704130139/https://www.usna.edu/CyberDept/sy110/lec/cryptAsymmEnc/hw/hw.pdf Read this: https://ssd.eff.org/en/module/what-encryption Now here is a slightly more technical primer on how real world cryptography works. Read this: https://ssd.eff.org/en/module/introduction-public-key-cryptography-and-pgp Alright, now that you have an idea of what encryption is, read this https://danielmiessler.com/study/encoding-encryption-hashing-obfuscation/ and explain the differences between the ideas explained. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/11-Passwords.html":{"url":"Cryptography/11-Passwords.html","title":"Passwords","keywords":"","body":"Passwords Read this: https://ssd.eff.org/en/module/creating-strong-passwords Passwords are a normal part of life for us. But when you see them in a Capture the Flag, usually something fishy is going on. Remember what we said earlier about you not being able to beat math? When it comes to passwords, you won't beat math. If the password is short, or in a dictionary, you will break it. If it is not, you never will. Read this: http://www.passwordanalytics.com/theory/passwords/ Read Passwords 101 and submit one example each of the three ways you authenticate yourself. Read Good Passwords 101 and submit a description of what makes a good password Read Strength 101 and submit a description of what makes a strong password Read Pass-Phrase and describe how pass phrases balance being a good password and a strong password. Read Cracking and explain which technique an attacker would use to attack a password that they knew to be 6 random alpha numeric characters Read Cracking and explain which technique an attacker would use to attack a password that they knew to be three random words added together. https://xkcd.com/936/ Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/12-PasswordsandHashingonLinux.html":{"url":"Cryptography/12-PasswordsandHashingonLinux.html","title":"Passwords and Hashing on Linux","keywords":"","body":"Passwords and Hashing on Linux A good deal of security is based around the idea of confidentiality, that someone who is not authorized to read something can't read it. We discussed the idea of permissions earlier, where someone who is not authorized to read something is simply not granted access to it by a computer, but there are situations in which we need to send or otherwise expose sensitive data. To allow data to be exposed without authentication, we need a way to protect that sensitive information from people who don't know some sort of secret. This is where math comes in. There are two primary ways to protect the confidentiality of secret information: Encryption and hashing. Let's go into each a little bit, but we will focus on hashing here. Encryption Encryption is something you've definitely heard of before, it's the lock on HTTPS websites, it's what we are supposed to do with sensitive files before we send them via email, it's everywhere. Encryption, at it's fundamental level, is doing math and having some sort of shared secret between the sender and the receiver that any adversary who is listening in doesn't have, so the sender can encrypt and the receiver can decrypt, and the adversary doesn't know anything other than that a message got sent. There's a ton to learn about the study of encryption which is known as cryptography, and I have a giant section in my CTF course about it if you want to learn more. Encoding and Obfuscation One big giant step down from encryption is encoding and obfuscation. While they might look like encryption, they are really just ways of translating data into another form. While you might need to spend some time figuring out how it is obfuscated or encoded, there is no math involved so it is far from secret. Encoding is notably not always a security measure, and can be used to get data into an acceptable format for transfer. One common example is Base64 encoding, which can be used to convert a binary into printable ASCII text. Hashing Finally, we get to hashing, the star of this lesson. Hashing is what we use if we wanted to encrypt something so that it could never be decrypted again. What does that mean, you're probably thinking. Hashes are designed to be mathematically one way, meaning it is impossible to reverse a hash into the data that was used to create it. Hashing functions are algorithms that take in any data, do math on it, and output a string of some set length depending on the function, that can be assumed to be unique to whatever the input was. To put it another way, no two inputs should result in the same output hash (that doesn't mean it's impossible, and it's very interesting when it does, but that is outside the scope of this course). Let's play around with hashing to try and get an idea of what this means. One of the more famous hashing algorithms is md5, so we'll use the 'md5sum' utility that should be included on your Linux machine. Run this command, which takes the string \"password\" and gets the md5 hash of it. $ echo -n \"password\" | md5sum Now, run this command. $ echo -n \"password1\" | md5sum As you can see, the outputs are completely different. We can also use hashing on files and programs. $ md5sum /bin/ls This will give us the unique hash of the 'ls' program. If a single bit in the program changes, the hash will be completely different. This is used by many software companies when they distribute software to verify the integrity of their software, as it allows downloaders to verify the hash to make sure the file they received is not corrupted. So hashing is interesting and one way, but doesn't that mean everyone in the world who gets the md5 hash of \"password\" has the same value? Absolutely. For a fun check, google the hash of 'password' and you'll find that it is everywhere. What does that mean then, that we can't use the password \"password\" anymore because someone can view hashes, crack them using a dictionary of common words, and then use it to log in? Well you shouldn't use common words, but that's not actually much of a problem because of something known as salting. Salting Salting is a very cool technique where a computer or website creates a unique string to place at the end of every password entered.This means that they can leave their hashes publicly readable, but an attacker is going to have a much harder time cracking them. Let's demo this, as if we were a user setting their password for the first time on a system with hashing enabled. $ echo \"password&secretsalt1337\" | md5sum So here we are emulating as if the user entered their new password \"password\", the system added on a salt, in this case \"&secretsalt1337\", and then the system saves the salt and the output of the md5 hash. The original password entered will not be saved anywhere. Now the next time when you enter your password, it will be combined with the salt stored on file, hashed, and then the hash will be compared to the hash on file, not any stored password. We'll come back to this later, but it's 2021, there is no excuse to be storing someone else's password. /etc/shadow As we showed earlier, modern Linux versions don't store passwords in /etc/passwd. Instead, they have been moved to /etc/shadow. So now, guess we just have to cat /etc/shadow instead, right? If you have been paying attention to this course so far, you probably guessed that wouldn't work. If you check the permissions, in order to read /etc/passwd, we need root access. So now we try it with superuser privileges and we should see the results. There should be a bunch of entries, but let's break one down. dennis:$6$iU9KjTeD$5myyo4W7zppTOEdVUeP8/E6Kmjl7CtYYFqIIyes.fnNHy1fR0gJLb0q2KLhjAH6KrPpHZ0eJorBh.D74mq.vQ.:17952:0:99999:7::: Briefly read through the man page for \"shadow\" and see the breakdown: man shadow The most notable part of this is the password field, field #2. To break it out, we can see that it is represented by: Notably, you can't actually read the password! Let's break this field down ever further: * $6 * This represents the hashing mechanism we are using to generate the hash from this password * $iU9KjTeD * This represents the randomly generated salt used * Remember how we were talking about salts earlier? In Linux, the salt is randomly generated for the user when they are created. These salts are different for each user. * $5myyo4W7zppTOEdVUeP8... * This is the resulting hash of taking the user's password and the randomly generated salt When a user types in a password, the OS takes the input, adds the salt that is saved in /etc/shadow, hashes the string, and then compares the output to the saved hash in /etc/shadow. If the hashes match, access is granted. So you might be asking, what is the salt for if an attacker can figure out what it is, and then run a dictionary of common passwords against it, to create a bunch of hashes, then compare those hashes to the hash saved in /etc/shadow? Well, the answer is that it is super inefficient to do that for every user. Without salts, attackers would only need one giant list of hashes to check against. With salts, for every user they need to run a new cracker against the hash. That is technically difficult and expensive enough that very few attackers will ever take the time to do that for your password. You're just not special enough, which is a good thing. Beyond this format, there are a few other characters that can be saved in an /etc/shadow password field. The use of \"!\" or \"*\" in this field indicates that the account cannot be logged into using a password, and must instead be logged into using an alternate method, such as an SSH key. This minimizes risk by forcing an attacker to know or have something besides a simple password. As a note, on modern Linux systems there are a variety of authentication methods (usually known as PAM) which use /etc/shadow in various ways. They are outside of the scope of this course, if you ever find yourself in a job that focuses on Linux auth, blame me for not teaching you more... and then teach yourself. ## Lock or Delete an Account If you need to lock an account so that it cannot be logged into, but still exists, use this command. $ sudo usermod -L account_name It will modify the /etc/shadow file to have an \"*\" in front of the password field so the account cannot be logged into. Check this using ```cat```. To delete an account: $ sudo userdel account_name # Assignment: 1. What is in /etc/shadow? Describe how hashing, salting, and cracking work from the perspective of a defender. 2. Break down this entry from /etc/shadow. Describe each field. especially focusing on the password field. * ```dennis:$6$iU9KjTeD$5myyo4W7zppTOEdVUeP8/E6Kmjl7CtYYFqIIyes.fnNHy1fR0gJLb0q2KLhjAH6KrPpHZ0eJorBh.D74mq.vQ.:17952:0:99999:7::: Create an account, set the password, check the password in /etc/shadow. Then lock the account using usermod, check the password again. Now, unlock the account, you will have to Google or use man pages for this. Check /etc/shadow again. Briefly write up what you saw and any problems you had doing this. Answer in the appropriate format. Answers: 1. Resources: Pre-Questions: Post-Questions: Feedback: Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/13-XOR.html":{"url":"Cryptography/13-XOR.html","title":"XOR","keywords":"","body":"XOR Read this: https://ctf101.org/cryptography/what-is-xor/ 25% of the time you see an XOR challenge in a CTF, you will have been given multiple XORd messages. Based off of how XOR works, you can XOR them against eachother and do something called a crib drag. I recommend this repo for crib dragging, but there are also online solvers. Do this crib drag problem. https://medium.com/hackstreetboys/securinets-ctf-quals-2019-useless-admin-crypto-4e2685452fec The other 74.99% of the time you see an XOR problem in a CTF, you can solve it with something named xortool. There are also websites online that do the same thing, but will fail on larger texts. Complete these two writeups: http://mslc.ctf.su/wp/hack-lu-ctf-2011-simplexor-200/ https://github.com/AetherEternity/ctf-writeups/tree/master/hackyou2017/Decrypt If it doesn't get solved with xortool, you're probably just doing it wrong, because the magic math should work. Also, resist the urge to bruteforce with xortool... if that happens, you're also probably doing it wrong. Submit a sentence or two on what you had to do to solve these challenges and anything you struggled with understanding. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/14-RSA.html":{"url":"Cryptography/14-RSA.html","title":"RSA","keywords":"","body":"RSA RSA is one of the most common modern cryptosystems, known for it's public and private key encryption. If you see public and private keys, there is a strong chance that it is an RSA problem, or at least RSA derived. Read this: https://ctf101.org/cryptography/what-is-rsa/ Follow this writeup and submit your solution: https://qy.sg/x-ctf-fact0r!z3-and-fact0r!z3_aga!n-crypto/ Some RSA problems will not be solved by default RSAtool runs. For those, you will often need an extension named Sage Math. I keep a cloud server setup with a few crypto tools and Sage installed, and a ton of cores and vmem so that if I need to, I can turn it on, download the ciphers, brrrrrrrrrt and solve with zero effort. Definitely a CTF power move, and it is free as long as you remember to turn it off once you are done, because it costs about $1.20 a minute. If you forget to turn it off, you'll burn through your free credits instantly and then have an $1000 dollar bill at the end of the month. High risk, high reward? Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/16-ThingsYouShouldntTrytoDo.html":{"url":"Cryptography/16-ThingsYouShouldntTrytoDo.html","title":"Things You Shouldnt Try to Do","keywords":"","body":"Things You Shouldnt Try to Do Remember what we said earlier about how math will win, every time? The corollary to the rule that you cannot beat math is \"Never roll your own crypto\". https://www.vice.com/en_us/article/wnx8nq/why-you-dont-roll-your-own-crypto. Anybody can write their own crypto libraries, but it probably sucks and is susceptible to attacks that were known in 1942. So when you see a CTF challenge with a \"custom encryption library\", know that whoever wrote that library implemented it wrong. In order to solve that challenge, you will need to know a great deal more about crypto than this course will try to teach you. If you want to become very very good at crypto, do the Matasano CryptoPals challenges. https://cryptopals.com/ and spend the rest of your days reading academic papers. Otherwise, just move on with your life. So moving on, if implemented properly (and the assumption for all standard libraries is that they are), the attacker will not beat math. It doesn't matter if you spin up a cloud server or build a facility in Utah, you're not going to beat math. Anytime you find yourself trying to do any of these things, assume that you have gone wrong somewhere along the way. Reverse a hash If nothing comes up when you google for it, move on. This is not what you are supposed to solve. Create a hash collision Possible for MD5 and SHA1 in various ways. Read this for more info: https://github.com/corkami/collisions Crack a password that is longer than 8 characters The math just isn't there. You are missing something. That something might just be a wordlist gathered from all words on a website/server/description https://en.wikipedia.org/wiki/Halting_problem https://en.wikipedia.org/wiki/P_versus_NP_problem Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"Cryptography/17-HackerMath.html":{"url":"Cryptography/17-HackerMath.html","title":"Hacker Math","keywords":"","body":"Hacker Math We don't need to know crazy math to be good hackers, as we saw with the crypto section, we can lean on other people's existing programs to get us where we need to go. However, there are a few \"mathy\" ideas that are good to know outside of crypto. Conditional Probability and Monty Hall https://en.wikipedia.org/wiki/Monty_Hall_problem This is often in CTF challenges and is really hard to wrap your head around. Birthday Paradox https://en.wikipedia.org/wiki/Birthday_problem Compounding https://www.investopedia.com/terms/c/compoundinterest.asp Amdahl's Law https://en.wikipedia.org/wiki/Amdahl%27s_law Curse of Dimensionality https://en.wikipedia.org/wiki/Curse_of_dimensionality Survivorship Bias https://en.wikipedia.org/wiki/Survivorship_bias#In_the_military You don't need to memorize any of these, but it is good to know what they are so you can spot them. For your assignment, explain Monty Hall in your own words. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NetworkForensics/0-CTFMeta.html":{"url":"NetworkForensics/0-CTFMeta.html","title":"CTF Meta ","keywords":"","body":"CTF Meta Register for the Free Course Today! Forensics can include a number of elements mixed together such as: Network (pcap files or other traffic logs) Recon (identifying random things, people, locations) Anti-forensic techniques When looking through a network challenges, there are a few basic types of challenges you can expect to see. A file is transferred A conversation occurs between two addresses A hidden channel is used to send information Something occurred and you must follow a series of events to get to the final answer These challenges often involve adding another level of work beyond the initial discovery of the communication, whether adding stego, encoding, encryption or a custom network protocol. The most important thing to do in the majority of these challenges is to identify the attacked host, the attacking host, and then find the channel in between. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NetworkForensics/1-NetworkForensicsIP.html":{"url":"NetworkForensics/1-NetworkForensicsIP.html","title":"Network Forensics IP","keywords":"","body":"Network Forensics IP Network forensics is the branch of digital forensics relating to analysis of computer network traffic in order to figure out what happened. In a CTF context, network forensics means packet captures, giant logs of all the packets that went over a wire, and you will have to find the flag, oftentimes with nothing in the way of a hint other than the title of the challenge. After completing this training, you too will be able to throw yourselves into the ether and become one with the packet capture, while simultaneously attempting to stave off madness and early onset glaucoma. Knowing how to use the tools to automate discovery is helpful, but most of the time it comes down to knowing the protocols, knowing what normal traffic looks like, and then identifying what looks ?weird? in the million odd packets you?ve been given. It?s a dirty job, but somebody has to do it. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NetworkForensics/2-WiresharkTutorial.html":{"url":"NetworkForensics/2-WiresharkTutorial.html","title":"Wireshark Tutorial","keywords":"","body":"Wireshark Tutorial What is a packet capture? A packet capture is the recording of all information that goes across your network. Preferably before you take this course you have some sort of networking experience, but what you really need to know is that it is possible to record all information that crosses a specific point in the path and then play it back so that an investigator can see everything that happened. If you don't have any networking experience, you can get away with learning as you go for the basics, but eventually you might want to become an expert so that you can crush these problems. Packet captures usually have the file extension .pcap or .pcapng, and are primarily opened with a tool named Wireshark. Work through the NewBoston Wireshark tutorial. No need to watch all of it, or at regular speed. Try 1.5 speed (or 2x) and bounce around to learn as much as you can. https://www.youtube.com/playlist?list=PL6gx4Cwl9DGBI2ZFuyZOl5Q7sptR7PwYN I'm sorry. This deserves its own thing but I haven't made it yet. Wireshark is an amazing tool, install it in both your native Windows and your VM. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NetworkForensics/3-NetForensics1.html":{"url":"NetworkForensics/3-NetForensics1.html","title":"NetForensics 1","keywords":"","body":"NetForensics 1 Solve this forensics challenge using the write-up provided and submit a screenshot of your solution. https://github.com/ctfs/write-ups-2015/tree/master/csaw-ctf-2015/forensics/transfer-100 Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NetworkForensics/4-NetForensics2.html":{"url":"NetworkForensics/4-NetForensics2.html","title":"NetForensics 2","keywords":"","body":"NetForensics 2 Solve this forensics challenge using the write-up provided and submit a screenshot of your solution. https://medium.com/@marcellelee/ctf-challenge-walkthrough-network-traffic-analysis-rogue-user-f87ae923130 Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NetworkForensics/5-tSharkTutorial.html":{"url":"NetworkForensics/5-tSharkTutorial.html","title":"tShark Tutorial","keywords":"","body":"tShark Tutorial Register for the Free Course Today! tShark is a command line tool to do the same things that Wireshark does. It is pretty awesome and allows you to script complex activities that you could never do in Wireshark. tShark should be your go to tool to solve these sort of problems. Follow this tutorial: https://hackertarget.com/tshark-tutorial-and-filter-examples/ To create your initial pcap, run the command \"tshark -i wlan0 -w capture-output.pcap\" and then visit https://hoppersroppers.org and http://zombo.com/. Then continue through the rest of the tutorial using the pcap you recorded. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NetworkForensics/6-NetForensics3.html":{"url":"NetworkForensics/6-NetForensics3.html","title":"NetForensics 3","keywords":"","body":"NetForensics 3 Solve this forensics challenge using the write-up provided and submit a screenshot of your solution. https://medium.com/@marcellelee/ctf-challenge-walkthrough-network-traffic-analysis-rogue-user-f87ae923130 Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NetworkForensics/7-PacketCraftingTBD.html":{"url":"NetworkForensics/7-PacketCraftingTBD.html","title":"Packet Crafting TBD","keywords":"","body":"Packet Crafting TBD TBD Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NetworkForensics/8-PacketCrafting1.html":{"url":"NetworkForensics/8-PacketCrafting1.html","title":"Packet Crafting 1","keywords":"","body":"Packet Crafting 1 Solve this forensics challenge using the write-up provided and submit a screenshot of your solution. https://github.com/ctfs/write-ups-2015/tree/master/csaw-ctf-2015/forensics/transfer-100 Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NetworkForensics/9-LearnNetworking.html":{"url":"NetworkForensics/9-LearnNetworking.html","title":"Learn Networking ","keywords":"","body":"Learn Networking If you want to learn more, click here to check out our course on learning Networking with Capture the Flags. $@COURSEVIEWBYID*20@$ This is a rough draft of a course. Nothing is complete, but it will get you pointed in the correct direction. It focuses on basic networking principles and teaching how to work with and understand packet captures. I recommend you look through the rest of this course before heading off and focusing on networking, but don't let me stop you. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"ScriptingandMisc/0-PwntoolsProblems.html":{"url":"ScriptingandMisc/0-PwntoolsProblems.html","title":"Pwntools Problems","keywords":"","body":"Pwntools Problems Register for the Free Course Today! A common scripting problem is connecting to web socket/SSH server and then doing some scripted activity. You should implement these problems using Pwntools rather than trying to make your own with Python sockets or gasp, something in C. https://github.com/Gallopsled/pwntools For this section, write a script using pwntools that connects to a port, waits for the word \"Username:\", enters \"root\", waits for \"Password:\", enters \"root\", then takes in 2 numbers, adds them together, and returns the solution. I'm not giving you the \"server\" for this challenge, so you're going to have to write your own server to test this. Write up a server that only accepts root/root as the user/pass and then gives two random numbers and checks that the response is correct. To host the server locally for testing, run '''socat TCP-LISTEN:1337,fork EXEC:'/path/to/script',stderr,pty,echo=0'''. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"ScriptingandMisc/1-LanguageProblems.html":{"url":"ScriptingandMisc/1-LanguageProblems.html","title":"Language Problems","keywords":"","body":"Language Problems Sometimes CTF challenge writers don't want to hurt your head with a normal language like C or Python, and instead give you something completely random. Sometimes it will be old programming languages, like FORTRAN or ADA. If you see a language that you don't recognize, look for something that appears to be the main function or a loop, basically any construct you recognize, and google it. If it is an important piece of the language, someone has mentioned it before and you'll at least know the language name. From there, you have to find some old documentation (or hopefully example code on Github) to copy. You'll have to find a compiler on Github to test them, and getting the entire toolchain to work is a real pain. These challenges are crazy hard, but it feels awesome when you get a punchcard program to compile. Another classic is esoteric programming languages, which are defined by Wikipedia as \" designed to test the boundaries of computer programming language design, as a proof of concept, as software art, as a hacking interface to another language (particularly functional programming or procedural programming languages), or as a joke.\" As most things are Turing Complete if you try hard enough (look it up if you don't know what that means, basically anything can be a programming language. Good for challenge developers, bad for you. For the most part though, they'll be using a well-known esoteric like brainfuck, or any of the other languages listed on this wiki page. Writing your own esoteric for a CTF is a lunatic move, so if you see something that doesn't match any of these formats, expect it to be a substitution version of an existing language, so look for syntactical similarities and throw it into an existing interpreter once you've translated it over. Another really common challenge is using an alphabet from another language, especially fictional and scifi ones. For those, use a site named omniglot to get a comprehensive list with examples. As a fun note, you don't actually need to know the language to solve problems like this. As long as it is a standard 26 character alphabet, you can solve any made up language like a substitution cipher using standard cryptographic tools, just map each made up character to a real character and treat it like a substitution. This is all to test your out of the box thinking and ability to learn quickly. It's terrible but they are actually kind of fun. Decrypt this: ++++++++++[>+>+++>+++++++>++++++++++>>+++.>+++++++++.>++++++.----.+++..+++++++..>---------------------.+++++++++++.-.>++++++.>--------.---.++.------.>+++++++++++++++.------------.+.++++++++++.>------------.------.++++++++++++.--------. Then follow this writeup for \"Brainmeat\": https://link.medium.com/qCZhPmtBqib Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"ScriptingandMisc/2-GitInsanity.html":{"url":"ScriptingandMisc/2-GitInsanity.html","title":"Git Insanity","keywords":"","body":"Git Insanity Nothing proves you are a good nerd like being able to make git do your bidding. This is the sort of problem you either know how to do, or it will take you 6 hours. Either way, highly deterministic and if someone puts the time in, they will solve the problem. Plus you might learn something useful in real life! Follow all the walkthroughs here! https://jaimelightfoot.com/blog/tuctfs-ready-player-one-challenges-hint-git-is-your-friend/ Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"ScriptingandMisc/3-CryptocurrencyProblems.html":{"url":"ScriptingandMisc/3-CryptocurrencyProblems.html","title":"Cryptocurrency Problems","keywords":"","body":"Cryptocurrency Problems There are a ton of blockchain and cryptocurrency (don't call it crypto or a nerd will yell at you) challenges popping up the last few years. I'm still looking for a nice accessible problem, so for now, just read these writeups from the Coinbase CTF. https://blog.coinbase.com/capture-the-coin-blockchain-category-solutions-9aef880d7e00 Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"ScriptingandMisc/4-QRCodes.html":{"url":"ScriptingandMisc/4-QRCodes.html","title":"QR Codes","keywords":"","body":"QR Codes Read this to become an expert on QR codes. https://www.thonky.com/qr-code-tutorial/ Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"ScriptingandMisc/5-RestrictedShells.html":{"url":"ScriptingandMisc/5-RestrictedShells.html","title":"Restricted Shells","keywords":"","body":"Restricted Shells Register for the Free Course Today! Restricted shells are a classic CTF problem because they're actually a classic security problem. Since the dawn of shared computing, situations have existed where you want to give a user access to a server, but restrict their ability to run certain commands or read certain files, or sometimes do things like run commands with specific characters or words. I think that restricted shells and privilege escalating out of the them is the purest form of CTF challenge. For these challenge you'll be given a username and pass to a service and then have to find your way out. 95% of the time, something in this guide to escapes will tell you what you need to do. Read the whole guide and try to understand what the different things mean. If you don't understand why a specific bypass works, do some research. Something that helps when you're working on these problems is once you figure out which type of restricted shell you are in, go and find the original source code on Github and try to determine what modifications the challenge author made to the problem. Once you've found what makes the challenge unique, you've probably found the vulnerable section. If you're stuck with one of these problems and can't figure it out, it's probably ENV variables. It's always ENV variables. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"ScriptingandMisc/6-EverythingElseTBD.html":{"url":"ScriptingandMisc/6-EverythingElseTBD.html","title":"Everything Else TBD","keywords":"","body":"Everything Else TBD Sometimes CTF challenge writers don't want to hurt your head with a normal language like C or Python, and instead give you something completely random. Sometimes it will be old programming languages, like FORTRAN or ADA. If you see a language that you don't recognize, look for something that appears to be the main function or a loop, basically any construct you recognize, and google it. If it is an important piece of the language, someone has mentioned it before and you'll at least know the language name. From there, you have to find some old documentation (or hopefully example code on Github) to copy. You'll have to find a compiler on Github to test them, and getting the entire toolchain to work is a real pain. These challenges are crazy hard, but it feels awesome when you get a punchcard program to compile. Another classic is esoteric programming languages, which are defined by Wikipedia as \" designed to test the boundaries of computer programming language design, as a proof of concept, as software art, as a hacking interface to another language (particularly functional programming or procedural programming languages), or as a joke.\" As most things are Turing Complete if you try hard enough (look it up if you don't know what that means, basically anything can be a programming language. Good for challenge developers, bad for you. For the most part though, they'll be using a well-known esoteric like brainfuck, or any of the other languages listed on this wiki page. Writing your own esoteric for a CTF is a lunatic move, so if you see something that doesn't match any of these formats, expect it to be a substitution version of an existing language, so look for syntactical similarities and throw it into an existing interpreter once you've translated it over. Another really common challenge is using an alphabet from another language, especially fictional and scifi ones. For those, use a site named omniglot to get a comprehensive list with examples. As a fun note, you don't actually need to know the language to solve problems like this. As long as it is a standard 26 character alphabet, you can solve any made up language like a substitution cipher using standard cryptographic tools, just map each made up character to a real character and treat it like a substitution. This is all to test your out of the box thinking and ability to learn quickly. It's terrible but they are actually kind of fun. Decrypt this: ++++++++++[>+>+++>+++++++>++++++++++>>+++.>+++++++++.>++++++.----.+++..+++++++..>---------------------.+++++++++++.-.>++++++.>--------.---.++.------.>+++++++++++++++.------------.+.++++++++++.>------------.------.++++++++++++.--------. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"HostandMemoryForensics/0-ForensicsMetaIP.html":{"url":"HostandMemoryForensics/0-ForensicsMetaIP.html","title":"Forensics Meta IP","keywords":"","body":"Forensics Meta IP Register for the Free Course Today! Resources: http://www.abchs.com/xsecure/chs/coursedocs/SSI_R1/pdf/DigitalForensics.pdf http://www.forensichandbook.com/locards-exchange-principle/ http://science.howstuffworks.com/locards-exchange-principle2.htm http://www.forensicdna.com/assets/the_origin_of_evidence.pdf https://www.law.cornell.edu/wex/daubert_standard http://www.forensicsciencesimplified.org/legal/daubert.html https://www.law.cornell.edu/wex/frye_standard http://www.forensicsciencesimplified.org/legal/frye.html Theory: Explain the scientific method and Locard?s Exchange Principle, and how they are both relevant in the digital world. What is the scientific method? Controlled variables in order to establish repeatability What is Locard?s Exchange Principle? Every time you make contact with another person, place, or thing, it results in an exchange of physical materials. At the same time, you will also take something away from the scene with them. How are they relevant in the digital world, especially in digital forensics? Give examples. Explain the six parts of the Inman-Rudin Paradigm Transfer, identification, individualization, association between source and target, the divisibility of matter, and reconstruction Which was added by Inman-Rudin? Divisibility of matter Explain the Frye and Daubert Standards, the differences between them, and which is more prevalent What is the Frye Standard? Frye Standard means that an expert opinion based on a scientific technique is admissible only where the technique is generally accepted as reliable in the relevant scientific community. What is the Daubert Standard? Daubert Standard means evidence must be the product of sound \"scientific methodology\" derived from the scientific method What is the difference between them? Difference is ?accepted? vs. ?sound scientific methodology? Which is the modern standard? Daubert is the modern standard Walk through the collection steps and explain the order of triage and why, using terms of order of volatility. - Where is the evidence? List what systems were involved in the incident and from which evidence will be collected. - Establish what is likely to be relevant and admissible. When in doubt err on the side of collecting too much rather than not enough. - For each system, obtain the relevant order of volatility. - Remove external avenues for change. - Following the order of volatility, collect the evidence with tools as discussed in Section 5. - Record the extent of the system's clock drift. - Question what else may be evidence as you work through the collection steps. - Document each step. - Don't forget the people involved. Make notes of who was there and what were they doing, what they observed and how they reacted. What is the order of volatility? - registers, cache - routing table, arp cache, process table, kernel statistics, memory - temporary file systems - disk - remote logging and monitoring data that is relevant to the system in question - physical configuration, network topology - archival media Why is it important to follow this order of triage? Explain the importance of chain of custody, write blockers, and hashes. What is a chain of custody and why is it important? What are write blockers and why are they important? What are the two main uses of hashes in a forensics case? Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"HostandMemoryForensics/1-HostForensicsBasics.html":{"url":"HostandMemoryForensics/1-HostForensicsBasics.html","title":"Host Forensics Basics","keywords":"","body":"Host Forensics Basics Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"HostandMemoryForensics/2-MemoryForensicsBasics.html":{"url":"HostandMemoryForensics/2-MemoryForensicsBasics.html","title":"Memory Forensics Basics","keywords":"","body":"Memory Forensics Basics Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"WebExploitation/0-CTFMeta.html":{"url":"WebExploitation/0-CTFMeta.html","title":"CTF Meta","keywords":"","body":"CTF Meta Register for the Free Course Today! Web challenges are fun because they are the first step towards \"hacking\" something in the way they make it look like in the movie. Most of the time, the challenge provides a web address and port and the attacker has to figure out how to get a flag hidden somewhere on the server. The nice thing about WebEx challenges is that you can follow the same playbook every time that the professional pentesters do in order to ensure repeatable success in identifying what the flaw is... the hard part is actually exploiting the more complex flaws once you've identified the site is vulnerable to them. It takes years of looking at websites and different web frameworks to learn what normal looks like and spot misconfigurations, but it is easy to start building your knowledge now. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"WebExploitation/1-LearnWebExploitationwithCapturetheFlags.html":{"url":"WebExploitation/1-LearnWebExploitationwithCapturetheFlags.html","title":"Learn Web Exploitation with Capture the Flags","keywords":"","body":"Learn Web Exploitation with Capture the Flags This is a rough draft of a course. Nothing is complete, but it will get you pointed in the correct direction. If you want to learn more, click here to check out our course on learning Web Exploitation with Capture the Flags. $@COURSEVIEWBYID*19@$ It focuses on how the internet and websites work, then goes through the basics of exploitation using some of the best resources across the internet. I recommend you look through the rest of this course before heading off, but don't let me stop you. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"BinaryExploitationandReversing/0-YouWontLearnThatHere.html":{"url":"BinaryExploitationandReversing/0-YouWontLearnThatHere.html","title":"You Wont Learn That Here","keywords":"","body":"You Wont Learn That Here Register for the Free Course Today! In a controversial move, I don't believe this is a beginner topic! I think it is a major shortcoming of the community that we pretend this is something beginners should be able to figure out by themselves. Before even attempting a reversing or exploitation problem a student should have a full understanding of C and assembly. It is very possible to fake it, and write buffer overflow exploits without knowing what a jmp instruction is (I certainly did), but we do a disservice to students by acting like this stuff is on the same level as the other materials taught in this course. I have a course that teaches C and x86 pretty goddamn well, so check it out! $@COURSEVIEWBYID*4@$ If you are angry at me for not teaching this, or have a better idea, let me know! Email me at d.m.devey@gmail.com or in Slack. When I get around to writing an Advanced CTFs course I will have plenty of Reversing and BinEx... and a knowledge of C and Assembly will be non-negotiable pre-requisites. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"BinaryExploitationandReversing/1-FundamentalsofExploitDevelopment.html":{"url":"BinaryExploitationandReversing/1-FundamentalsofExploitDevelopment.html","title":"Fundamentals of Exploit Development","keywords":"","body":"Fundamentals of Exploit Development Click here to check out our course on the Fundamentals of Exploit Development. $@COURSEVIEWBYID*4@$ This is a rough draft of a course. Nothing is complete, but it will get you pointed in the correct direction. We work through a few of the problems in the h0mbre C course , taking time to disassemble, debug, graphically display, and RE various functions. We also work through some of GuyInATuxedo's Nightmare Exploitation Course. During this course we start with exceptionally simple problems and gradually increase complexity, raising your level of comfort with x86. You won't be an expert, but you'll know what you're doing. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NextStepsandTrustedResources/0-PicoCTF.html":{"url":"NextStepsandTrustedResources/0-PicoCTF.html","title":"PicoCTF","keywords":"","body":"PicoCTF Register for the Free Course Today! Our goal throughout this course was to teach you the most essential skills and introduce you the most important resources so that you are able to solve problems in a CTF by yourself. All the words, concepts, and tools we have introduced have led you to this point. Now you are going to go compete in the 2019 picoCTF! https://2019game.picoctf.com/ This competition runs year round and is organized by some of our friends. With the knowledge you have from this course you should be able to crush it! Keep us informed of your progress, let us know any time that you get stuck. We are here to support and will be asking you as well. Make sure you document your work and take good notes so that you can create your own writeups for others to learn from. Good luck! Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NextStepsandTrustedResources/1-TryHackMe.html":{"url":"NextStepsandTrustedResources/1-TryHackMe.html","title":"TryHackMe","keywords":"","body":"TryHackMe TryHackMe is an incredible resource that gets you great resources to learn just about any subject. Make an account and hack on different challenges, you might just find yourself addicted. I am a huge fan of their paths, which offer some pretty great stuff that start to go into more formal security training. Right now, you are prepared to absolutely CRUSH their beginner curriculum, which I believe is top of the line. Why did I want you to do Roppers before you do their beginner curriculum? Well, mostly because beginner curriculum's are very rarely meant for beginners, and theirs is no exception. On the plus side, it's a great for first steps in security now that you've nailed down computing fundamentals. https://tryhackme.com/path/outline/beginner So jealous of those guys... someday, maybe Roppers will be like them. Nahhhh. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NextStepsandTrustedResources/2-HackTheBox.html":{"url":"NextStepsandTrustedResources/2-HackTheBox.html","title":"HackTheBox","keywords":"","body":"HackTheBox Even more advanced than TryHackMe is HacktheBox, which is an even better platform filled with challenges, training, and very addictively, individual boxes for you to hack. This stuff is for learning security, and very explicitly, how to hack, which is a hell of a lot of fun. I'm not pretending to teach pentest stuff on this site, all that you should learn from other people. Just like how you learned on Roppers, watch walkthroughs, take notes, and always keep improving your skills. Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "},"NextStepsandTrustedResources/4-UserTestimonial.html":{"url":"NextStepsandTrustedResources/4-UserTestimonial.html","title":"User Testimonial","keywords":"","body":"User Testimonial If you have gotten this far, I'd really appreciate a user testimonial. They go a long way towards getting new students and helping me out with marketing. Thanks for the help, and no pressure! https://docs.google.com/forms/d/1-gikX-u3Xxoh396NnBBrOk4A-qQx4Qqx7erBpmwnFlw Hoppers Roppers 2020            Date： 2022-03-20 20:02:15 "}}